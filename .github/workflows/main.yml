name: Upload Website

on:
  push:
    branches:
    - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      AWS_REGION:  ${{ steps.condition.outputs.aws_region }}
      LIGHTSAIL_CONTAINER_NAME:  ${{ steps.condition.outputs.lighstail_container_name }}
      LIGHTSAIL_SERVICE_NAME:  ${{ steps.condition.outputs.lightsail_service_name }}
      IMAGE_COMPLETE:  ${{ steps.condition.outputs.image_complete }}
    steps:
      - uses: actions/checkout@v2
      - name: Set variables
        id: condition
        run: |
          if [ ${{ github.ref }} == 'refs/heads/main' ]; then
            echo "Prod branch!"
            echo "aws_region=us-west-2" >> $GITHUB_OUTPUT
            echo "lighstail_container_name=microservices-inventory" >> $GITHUB_OUTPUT 
            echo "lightsail_service_name=microservices-inventory" >> $GITHUB_OUTPUT 
            echo "image_complete=733460217936.dkr.ecr.us-west-2.amazonaws.com/microservices-inventory:latest" >> $GITHUB_OUTPUT 
          else
            echo "Dev branch!"
            echo "aws_region=us-east-1" >> $GITHUB_OUTPUT
            echo "lighstail_container_name=microservices-inventory-dev" >> $GITHUB_OUTPUT 
            echo "lightsail_service_name=microservices-inventory-dev" >> $GITHUB_OUTPUT 
            echo "image_complete=733460217936.dkr.ecr.us-east-1.amazonaws.com/microservices-inventory:latest" >> $GITHUB_OUTPUT 
          fi
        shell: bash

  deploy-site:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - env:
          AWS_REGION: ${{needs.setup.outputs.AWS_REGION}}
          LIGHTSAIL_CONTAINER_NAME: ${{needs.setup.outputs.LIGHTSAIL_CONTAINER_NAME}}
          LIGHTSAIL_SERVICE_NAME: ${{needs.setup.outputs.LIGHTSAIL_SERVICE_NAME}}
          IMAGE_COMPLETE: ${{needs.setup.outputs.IMAGE_COMPLETE}}
        run: |  
          echo "Deploying using  ${{env.AWS_REGION}}  ${{ env.LIGHTSAIL_CONTAINER_NAME }}  ${{ env.LIGHTSAIL_SERVICE_NAME }}  ${{ env.IMAGE_COMPLETE }}"
      - uses: actions/checkout@v2
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm install
      - name: Build Project
        run: npm run generate
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: 'my-website-ci-cd'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          SOURCE_DIR: .output/public/
